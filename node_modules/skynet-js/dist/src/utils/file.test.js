"use strict";
exports.__esModule = true;
var file_1 = require("./file");
describe("getRelativeFilePath", function () {
    var filepaths = [
        ["abc/def", "def"],
        ["./abc/def", "def"],
        ["/abc/def.txt", "def.txt"],
    ];
    it.each(filepaths)("the relative file path for a file with the path %s should be %s", function (filepath, directory) {
        var file = new File(["test contents"], "foo");
        // @ts-expect-error We spoof the path here which is present in browsers but not in the File standard.
        file.path = filepath;
        expect(file_1.getRelativeFilePath(file)).toEqual(directory);
    });
});
describe("getRootDirectory", function () {
    var filepaths = [
        ["abc/def", "abc"],
        ["./abc/def", "abc"],
        ["/abc/def", "abc"],
    ];
    it.each(filepaths)("the root directory for a file with the path %s should be %s", function (filepath, directory) {
        var file = new File(["test contents"], "foo");
        // @ts-expect-error We spoof the path here which is present in browsers but not in the File standard.
        file.path = filepath;
        expect(file_1.getRootDirectory(file)).toEqual(directory);
    });
});
describe("getFileMimeType", function () {
    it("should return file type if type is specified on a file", function () {
        var file = new File([], "foobar.baz", { type: "foo/bar" });
        expect(file_1.getFileMimeType(file)).toEqual("foo/bar");
    });
    describe("when there is no file type", function () {
        it("should guess the file type based on the extension", function () {
            // list a few popular extensions just to be sure the mime db works
            expect(file_1.getFileMimeType(new File([], "foo.html"))).toEqual("text/html");
            expect(file_1.getFileMimeType(new File([], "foo.txt"))).toEqual("text/plain");
            expect(file_1.getFileMimeType(new File([], "foo.json"))).toEqual("application/json");
        });
        it("should return empty file type if there is no file extension", function () {
            var file = new File([], "foobar");
            expect(file_1.getFileMimeType(file)).toEqual("");
        });
        it("should return empty file type if the extension is not matched to any mime type", function () {
            var file = new File([], "foobar.baz");
            expect(file_1.getFileMimeType(file)).toEqual("");
        });
    });
});
