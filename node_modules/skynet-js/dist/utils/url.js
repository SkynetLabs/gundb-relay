"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultPortalUrl = defaultPortalUrl;
exports.addSubdomain = addSubdomain;
exports.addUrlQuery = addUrlQuery;
exports.makeUrl = makeUrl;
exports.defaultSkynetPortalUrl = void 0;

var _urlParse = _interopRequireDefault(require("url-parse"));

var _urlJoin = _interopRequireDefault(require("url-join"));

var _string = require("./string");

const defaultSkynetPortalUrl = "https://siasky.net"; // TODO: This will be smarter. See
// https://github.com/NebulousLabs/skynet-docs/issues/21.

/**
 * Returns the default portal URL.
 *
 * @returns - The portal URL.
 */

exports.defaultSkynetPortalUrl = defaultSkynetPortalUrl;

function defaultPortalUrl() {
  /* istanbul ignore next */
  if (typeof window === "undefined") return "/"; // default to path root on ssr

  return window.location.origin;
}
/**
 * Adds a subdomain to the given URL.
 *
 * @param url - The URL.
 * @param subdomain - The subdomain to add.
 * @returns - The final URL.
 */


function addSubdomain(url, subdomain) {
  const urlObj = new URL(url);
  urlObj.hostname = "".concat(subdomain, ".").concat(urlObj.hostname);
  const str = urlObj.toString();
  return (0, _string.trimSuffix)(str, "/");
}
/**
 * Adds a query to the given URL.
 *
 * @param url - The URL.
 * @param query - The query parameters.
 * @returns - The final URL.
 */


function addUrlQuery(url, query) {
  const parsed = (0, _urlParse.default)(url, true); // Combine the desired query params with the already existing ones.

  query = { ...parsed.query,
    ...query
  };
  parsed.set("query", query);
  return parsed.toString();
}
/**
 * Properly joins paths together to create a URL. Takes a variable number of
 * arguments.
 *
 * @param args - Array of URL parts to join.
 * @returns - Final URL constructed from the input parts.
 */


function makeUrl(...args) {
  return args.reduce((acc, cur) => (0, _urlJoin.default)(acc, cur));
}