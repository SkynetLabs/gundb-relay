"use strict";

var _url = require("./url");

const portalUrl = _url.defaultSkynetPortalUrl;
const skylink = "XABvi7JtJbQSMAcDwnUnmp2FKDPjg8_tTTFP4BwMSxVdEg";
describe("addUrlQuery", () => {
  it("should return correctly formed URLs with query parameters", () => {
    expect((0, _url.addUrlQuery)(portalUrl, {
      filename: "test"
    })).toEqual("".concat(portalUrl, "?filename=test"));
    expect((0, _url.addUrlQuery)("".concat(portalUrl, "/path/"), {
      download: true
    })).toEqual("".concat(portalUrl, "/path/?download=true"));
    expect((0, _url.addUrlQuery)("".concat(portalUrl, "/skynet/"), {
      foo: 1,
      bar: 2
    })).toEqual("".concat(portalUrl, "/skynet/?foo=1&bar=2"));
    expect((0, _url.addUrlQuery)("".concat(portalUrl, "/"), {
      attachment: true
    })).toEqual("".concat(portalUrl, "/?attachment=true"));
    expect((0, _url.addUrlQuery)("".concat(portalUrl, "?foo=bar"), {
      attachment: true
    })).toEqual("".concat(portalUrl, "?foo=bar&attachment=true"));
    expect((0, _url.addUrlQuery)("".concat(portalUrl, "/?attachment=true"), {
      foo: "bar"
    })).toEqual("".concat(portalUrl, "/?attachment=true&foo=bar"));
    expect((0, _url.addUrlQuery)("".concat(portalUrl, "#foobar"), {
      foo: "bar"
    })).toEqual("".concat(portalUrl, "?foo=bar#foobar"));
  });
});
describe("makeUrl", () => {
  it("should return correctly formed URLs", () => {
    expect((0, _url.makeUrl)(portalUrl, "/")).toEqual("".concat(portalUrl, "/"));
    expect((0, _url.makeUrl)(portalUrl, "/skynet")).toEqual("".concat(portalUrl, "/skynet"));
    expect((0, _url.makeUrl)(portalUrl, "/skynet/")).toEqual("".concat(portalUrl, "/skynet/"));
    expect((0, _url.makeUrl)(portalUrl, "/", skylink)).toEqual("".concat(portalUrl, "/").concat(skylink));
    expect((0, _url.makeUrl)(portalUrl, "/skynet", skylink)).toEqual("".concat(portalUrl, "/skynet/").concat(skylink));
    expect((0, _url.makeUrl)(portalUrl, "//skynet/", skylink)).toEqual("".concat(portalUrl, "/skynet/").concat(skylink));
    expect((0, _url.makeUrl)(portalUrl, "/skynet/", "".concat(skylink, "?foo=bar"))).toEqual("".concat(portalUrl, "/skynet/").concat(skylink, "?foo=bar"));
    expect((0, _url.makeUrl)(portalUrl, "".concat(skylink, "/?foo=bar"))).toEqual("".concat(portalUrl, "/").concat(skylink, "?foo=bar"));
    expect((0, _url.makeUrl)(portalUrl, "".concat(skylink, "#foobar"))).toEqual("".concat(portalUrl, "/").concat(skylink, "#foobar"));
  });
});